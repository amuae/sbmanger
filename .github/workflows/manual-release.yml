name: Manual Release Build

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Release name (optional)'
        required: false
        default: 'latest'
      prerelease:
        description: 'Mark as prerelease'
        required: false
        type: boolean
        default: false

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
    
    - name: Get current date
      id: date
      run: echo "date=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
    
    - name: Build Agent for Linux (amd64)
      run: |
        cd agent
        go mod tidy
        CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o agent-linux-amd64
        chmod +x agent-linux-amd64
    
    - name: Build Agent for Linux (arm64)
      run: |
        cd agent
        CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -ldflags="-s -w" -o agent-linux-arm64
        chmod +x agent-linux-arm64
    
    - name: Build Agent for Windows (amd64)
      run: |
        cd agent
        CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o agent-windows-amd64.exe
    
    - name: Build Agent for macOS (amd64)
      run: |
        cd agent
        CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o agent-darwin-amd64
        chmod +x agent-darwin-amd64
    
    - name: Build Agent for macOS (arm64)
      run: |
        cd agent
        CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o agent-darwin-arm64
        chmod +x agent-darwin-arm64
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: latest
        name: ${{ github.event.inputs.release_name || 'Latest Build' }} - ${{ steps.date.outputs.date }}
        files: |
          agent/agent-linux-amd64
          agent/agent-linux-arm64
          agent/agent-windows-amd64.exe
          agent/agent-darwin-amd64
          agent/agent-darwin-arm64
        body: |
          ## SBManager Agent - Manual Release
          
          这是SBManager Agent的手动发布版本，支持以下平台：
          
          ### 支持的系统
          - **Linux AMD64** - 适用于x86_64 Linux系统
          - **Linux ARM64** - 适用于ARM64 Linux系统（如树莓派4）
          - **Windows AMD64** - 适用于64位Windows系统
          - **macOS AMD64** - 适用于Intel Mac
          - **macOS ARM64** - 适用于Apple Silicon Mac
          
          ### 使用方法
          1. 下载对应平台的Agent文件
          2. 运行 `./agent-[platform] config` 创建配置文件
          3. 编辑配置文件设置主控面板地址和Token
          4. 运行 `./agent-[platform] install` 安装为系统服务
          
          ### 功能特性
          - 系统资源监控（CPU、内存、磁盘、网络）
          - 自动配置部署
          - 服务状态管理
          - 无外部依赖
          
          ### 部署目录
          - **主控网站**: `/opt/sbmanger/`
          - **Agent二进制**: `/opt/sbagent/`
        draft: false
        prerelease: ${{ github.event.inputs.prerelease }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
